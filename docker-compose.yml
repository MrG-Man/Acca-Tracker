version: '3.8'

services:
  web:
    build: .
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - HOST=0.0.0.0
      - PORT=5000
    env_file:
      - .env
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./static:/app/static
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - football-predictions

  # Optional: Redis for caching (if needed in future)
  # redis:
  #   image: redis:7-alpine
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis_data:/data
  #   restart: unless-stopped
  #   networks:
  #     - football-predictions

  # Optional: PostgreSQL database (if needed in future)
  # db:
  #   image: postgres:15-alpine
  #   environment:
  #     POSTGRES_DB: football_predictions
  #     POSTGRES_USER: app
  #     POSTGRES_PASSWORD: ${DB_PASSWORD}
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   restart: unless-stopped
  #   networks:
  #     - football-predictions

networks:
  football-predictions:
    driver: bridge

# Optional: Named volumes for data persistence
volumes:
  # redis_data:
  # postgres_data: